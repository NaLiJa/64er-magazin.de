;format-system lader.prg ==0801==
;Eingetippt von Endurion
   10 rem ************************
   20 rem *                      *
   30 rem *  disk-format-system  *
   40 rem *                      *
   50 rem *   (c) 1985 by koss   *
   60 rem *                      *
   70 rem ************************
   80 data 5657,5638,6947,7770,8264,7062,8578,6111,3989,3215,9192,10797
   90 data 8104,8232,8308,3524,3180,5204,4577
  100 data 0,14,8,10,0,158,32,50,48,54,52,32,32,0,0,0,162,64,160,8,134,2,132,3
  110 data 162,0,160,192,134,4,132,5,160,0,162,5,177,2,145,4,200,208,249,230,3
  120 data 230,5,202,208,242,120,169,242,141,50,3,169,195,141,51,3,88,96,234,234
  130 data 165,10,201,36,144,7,169,18,133,67,76,19,5,32,75,242,133,67,169,0,133
  140 data 27,160,0,162,0,165,57,153,0,3,200,200,165,27,153,0,3,200,165,10,153
  150 data 0,3,200,165,19,153,0,3,200,165,18,153,0,3,200,169,15,153,0,3,200,153
  160 data 0,3,200,169,0,89,250,2,89,251,2,89,252,2,89,253,2,153,249,2,230,27
  170 data 165,27,197,67,144,190,169,3,133,49,152,72,138,157,0,7,232,208,250,32
  180 data 48,254,104,168,136,32,229,253,32,245,253,169,7,133,49,32,233,245,133
  190 data 58,32,143,247,169,0,133,50,32,14,254,169,255,141,1,28,162,5,80,254
  200 data 184,202,208,250,162,10,164,50,80,254,184,185,0,3,141,1,28,200,202,208
  210 data 243,162,9,80,254,184,169,85,141,1,28,202,208,245,169,255,162,5,80,254
  220 data 184,141,1,28,202,208,247,162,187,80,254,184,189,0,1,141,1,28,232,208
  230 data 244,160,0,80,254,184,177,48,141,1,28,200,208,245,169,85,162,8,80,254
  240 data 184,141,1,28,202,208,247,165,50,24,105,10,133,50,198,27,208,149,80
  250 data 254,184,80,254,184,32,0,254,169,200,133,31,169,0,133,48,169,3,133,49
  260 data 165,67,133,27,32,86,245,162,10,160,0,80,254,184,173,1,28,209,48,208
  270 data 14,200,202,208,242,24,165,48,105,10,133,48,76,53,6,198,31,208,209,169
  280 data 6,76,211,253,32,86,245,160,187,80,254,184,173,1,28,217,0,1,208,231
  290 data 200,208,242,162,252,80,254,184,173,1,28,217,0,7,208,215,200,202,208
  300 data 241,198,27,208,176,76,158,253,160,0,185,224,6,153,0,2,200,204,223,6
  310 data 144,244,173,223,6,141,116,2,173,222,6,141,123,2,169,0,133,127,32,0
  320 data 193,172,123,2,185,0,2,133,18,185,1,2,133,19,32,7,211,169,26,141,5,28
  330 data 169,192,133,0,165,0,48,252,174,220,6,134,10,169,224,133,2,165,2,48
  340 data 252,201,2,176,12,232,236,221,6,144,236,32,64,238,96,234,234,162,2,76
  350 data 10,230,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  360 data 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  370 data 162,0,32,135,194,160,0,32,207,255,201,13,240,8,153,224,193,200,192
  380 data 16,144,241,169,44,153,224,193,200,140,222,193,162,71,32,135,194,162
  390 data 0,32,207,255,201,13,240,9,153,224,193,200,232,224,2,144,240,140,223
  400 data 193,162,83,32,135,194,32,207,255,133,250,32,207,255,133,251,169,0,133
  410 data 208,162,98,32,135,194,32,207,255,133,252,32,207,255,133,253,169,0,133
  420 data 208,165,250,166,251,32,4,196,141,220,193,165,252,166,253,32,4,196,141
  430 data 221,193,238,221,193,234,234,234,234,234,234,234,234,234,234,234,234
  440 data 234,234,76,147,194,189,77,195,240,6,32,210,255,232,208,245,96,169,13
  450 data 32,210,255,169,13,32,210,255,169,0,162,192,133,167,134,168,169,0,162
  460 data 5,133,169,134,170,169,8,32,177,255,169,111,32,147,255,169,77,32,168
  470 data 255,169,45,32,168,255,169,87,32,168,255,160,0,165,169,32,168,255,165
  480 data 170,32,168,255,169,30,32,168,255,177,167,32,168,255,200,192,30,144
  490 data 246,32,174,255,24,165,167,105,30,133,167,144,3,230,168,24,165,169,166
  500 data 170,105,30,133,169,144,2,230,170,224,7,144,173,201,0,144,169,169,8
  510 data 32,177,255,169,111,32,147,255,169,77,32,168,255,169,45,32,168,255,169
  520 data 69,32,168,255,169,96,32,168,255,169,6,32,168,255,32,174,255,169,0,133
  530 data 144,169,8,32,180,255,169,111,32,150,255,32,165,255,32,210,255,36,144
  540 data 80,246,32,171,255,76,220,195,0,0,0,0,0,147,32,32,32,32,32,32,32,42
  550 data 42,42,32,68,73,83,75,45,70,79,82,77,65,84,45,83,89,83,84,69,77,32,42
  560 data 42,42,13,13,13,32,40,67,41,32,49,57,56,53,32,66,89,32,75,79,83,83,32
  570 data 32,32,13,13,13,68,73,83,75,78,65,77,69,58,32,0,13,13,68,73,83,75,45
  580 data 73,68,58,32,0,13,13,70,82,79,77,32,84,82,65,67,75,58,36,0,13,13,84
  590 data 79,32,84,82,65,67,75,58,36,0,13,13,65,78,79,84,72,69,82,32,70,79,82
  600 data 77,65,84,32,40,89,47,78,41,32,63,32,13,13,0,0,0,0,0,32,41,196,162,111
  610 data 32,135,194,32,228,255,240,251,201,89,208,3,76,0,194,96,0,165,183,240
  620 data 3,76,237,245,32,0,194,169,1,162,0,160,0,24,96,133,2,134,3,165,2,201
  630 data 65,144,3,24,105,9,41,15,10,10,10,10,133,2,165,3,201,65,144,3,24,105
  640 data 9,41,15,5,2,133,2,96,169,242,141,50,3,169,195,141,51,3,96,0
 1000 rem
 1010 rem **** datas initialisieren
 1020 rem
 1030 restore:print:print:print"datas werden ueberprueft !!!":print:print
 1040 clr:dim p(19):dim w(19)
 1050 for x=0 to 18:read p(x):p=p+p(x):next
 1060 if p<>124349 then print"pruefsummenfehler":print:print:list 80-90
 1070 for x=0 to 18:for y=0 to 59:read a:w(x)=w(x)+a:next y
 1080 ifw(x)<>p(x)then 1150
 1090 next x
 1100 print:print"die datas sind ok und werden":print:print"abgespeichert!"
 1110 restore:for x=0 to 18:read a:next
 1120 for x=0 to 1139:read a:poke x+2048,a:next
 1130 poke 45,119:poke 174,119:poke 46,12:poke 175,12:clr
 1140 print:print"mit 'save' abspeichern!":print:end
 1150 rem fehlerbehandlung
 1160 print:print"fehler in den datas"x*60" bis"x*60+59" !":z=int(x*600/17.8)
 1170 print:print:print"das entspricht in etwa den              {down}zeilen ab"z
 1180 end

